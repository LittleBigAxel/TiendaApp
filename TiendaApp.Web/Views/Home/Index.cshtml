@model IEnumerable<TiendaApp.Core.Entities.Product>
@{
    ViewData["Title"] = "Game Store";
    Layout = "_Layout";
}

<div class="container">
    <h1 class="mb-4">Available Games</h1>

    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var product in Model)
        {
            <div class="col gamecard">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(product.ImageURL))
                    {
                        <img src="@product.ImageURL" class="card-img-top" alt="@product.Name">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">Category: @product.Category</p>
                        <p class="card-text">Price: $@product.Price.ToString("F2")</p>
                        <p class="card-text">Stock: @product.Stock</p>

                        @if (product.Stock > 0)
                        {
                            <form asp-action="Buy" asp-controller="Home" method="post"
                                  onsubmit="return confirm('Are you sure you want to purchase @product.Name?');">
                                <input type="hidden" name="id" value="@product.Id" />
                                <button type="submit" class="btn btn-primary sale-btn">
                                    Buy Now - $@product.Price.ToString("F2")
                                </button>
                            </form>
                        }
                        else
                        {
                                    <button class="btn btn-secondary sale-btn" disabled>Out of Stock</button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function submitFormAjax(button) {

        const form = button.closest('form');
        if (form) {

            const formData = new FormData(form);


            fetch(form.action, {
                method: form.method,
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {

                console.log('Form submitted successfully:', data);
            })
            .catch(error => {

                console.error('Form submission error:', error);
            });
        }
    }
</script>